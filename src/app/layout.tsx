"use client"

import React, { useEffect } from "react";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { MuiNavBar } from "@/components/navbar";
import Footer from "@/components/footer";
import { createTheme, CssBaseline, Divider, PaletteMode, ThemeProvider } from "@mui/material";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [mode, setMode] = React.useState<PaletteMode>('light');

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const savedMode = localStorage.getItem('themeMode') as PaletteMode;
      setMode(savedMode || 'light');
    }
  }, []);

  const toggleColorMode = () => {
    setMode((prevMode) => {
      const newMode = prevMode === 'light' ? 'dark' : 'light';
      localStorage.setItem('themeMode', newMode);
      return newMode;
    });
  };

  const theme = React.useMemo(
    () =>
      createTheme({
        palette: {
          mode,
          ...(mode === 'dark'
            ? {
              background: {
                default: '#161C24',
                paper: '#161C24',
              },
              text: {
                primary: '#ffffff',
              },
            }
            : {
              background: {
                default: '#ffffff',
                paper: '#f5f5f5',
              },
              text: {
                primary: '#000000',
              },
            }),
        },
      }),
    [mode],
  );


  return (
    <html lang="en">
      <body className={inter.className} style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>
        <ThemeProvider theme={theme}>
          <CssBaseline />
          <MuiNavBar mode={mode} toggleColorMode={toggleColorMode} />
          <main style={{ flex: 1 }}>{children}</main>
          <Footer mode={mode} toggleColorMode={toggleColorMode} />
        </ThemeProvider>
      </body>
    </html>
  );
}
